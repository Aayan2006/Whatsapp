{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","onChange","e","target","type","preventDefault","console","log","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAaMA,EADcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIMC,YACjBC,EAAOV,IAASU,OAChBC,EAAW,IAAIX,IAASU,KAAKE,mBAGpBb,I,QCmCAc,MA9Cf,YAAgD,IAAD,EAAxBC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAAc,EACnBC,mBAAS,IADU,mBACpCC,EADoC,KAC9BC,EAD8B,OAEVF,mBAAS,IAFC,mBAEpCG,EAFoC,KAE1BC,EAF0B,KA4B3C,OAxBAC,qBAAU,WACFR,GACAf,EAAGwB,WAAW,SAASC,IAAIV,GAAIS,WAAW,YAAYE,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAAQ,OAClGN,EAAYM,EAASC,KAAKC,KAAI,SAACL,GAAD,OAC9BA,EAAIM,gBAGb,CAAChB,IAEJQ,qBAAU,WACNH,EAAQY,KAAKC,MAAsB,IAAhBD,KAAKE,aACzB,IAaKjB,EAYJ,qBAAKkB,QAvBU,WACf,IAAMC,EAAWC,OAAO,8BAEpBD,GACApC,EAAGwB,WAAW,SAASc,IAAI,CACvBtB,KAAMoB,KAkBYG,UAAU,cAApC,SACI,gDAZJ,cAAC,IAAD,CAAMC,GAAE,iBAAYzB,GAApB,SACI,sBAAKwB,UAAU,cAAf,UACI,cAACE,EAAA,EAAD,CAAQC,IAAG,iDAA4CvB,EAA5C,UACX,sBAAKoB,UAAU,oBAAf,UACI,6BAAKvB,IACL,sCAAIK,EAAS,UAAb,aAAI,EAAasB,mB,mECvCxBC,G,MAAeC,2BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACzB,cAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,GAAlD,SACKC,KAIII,EAAgB,kBAAMC,qBAAWV,ICwD/BW,MArDf,WAAoB,IAAD,EACWrC,mBAAS,IADpB,mBACRsC,EADQ,KACDC,EADC,OAEcJ,IAFd,mBAENK,EAFM,KAENA,KAiBX,OAnBiB,KAGfnC,qBAAU,WACN,IAAMoC,EAAc3D,EAAGwB,WAAW,SACjCG,YAAW,SAACC,GAAD,OACR6B,EACI7B,EAASC,KAAKC,KAAI,SAACL,GAAD,MAAU,CACzBV,GAAGU,EAAIV,GACPgB,KAAMN,EAAIM,eAId,OAAO,WACH4B,OAGZ,IAGH,sBAAKpB,UAAU,UAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAACE,EAAA,EAAD,CAAQC,IAAG,OAAEgB,QAAF,IAAEA,OAAF,EAAEA,EAAME,WACnB,sBAAKrB,UAAU,uBAAf,UACE,cAACsB,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,IAAD,YAIN,qBAAKtB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,cAACuB,EAAA,EAAD,IACA,uBAAOC,YAAY,kCAGvB,sBAAKxB,UAAU,iBAAf,UACI,cAAC,EAAD,CAAatB,YAAU,IACtBuC,EAAM1B,KAAI,SAAAkC,GAAI,OACX,cAAC,EAAD,CAA2BjD,GAAIiD,EAAKjD,GAClCC,KAAMgD,EAAKjC,KAAKf,MADAgD,EAAKjD,c,oECqDtBkD,MAnGf,WAAiB,IAAD,MACc/C,mBAAS,IADvB,mBACLgD,EADK,KACEC,EADF,OAEYjD,mBAAS,IAFrB,mBAELC,EAFK,KAECC,EAFD,KAGJgD,EAAWC,cAAXD,OAHI,EAIoBlD,mBAAS,IAJ7B,mBAILkB,EAJK,KAIKkC,EAJL,OAKoBpD,mBAAS,IAL7B,mBAKLG,EALK,KAKKC,EALL,OAMiB+B,IANjB,mBAMHK,EANG,KAMHA,KAoCT,OA1CY,KAQZnC,qBAAU,WACF6C,IACApE,EAAGwB,WAAW,SACbC,IAAI2C,GACJzC,YAAW,SAACC,GAAD,OACR0C,EAAY1C,EAASG,OAAOf,SAEhChB,EAAGwB,WAAW,SACbC,IAAI2C,GACJ5C,WAAW,YACXE,QAAQ,YAAY,OACpBC,YAAW,SAACC,GAAD,OACRN,EAAYM,EAASC,KAAKC,KAAI,SAAAL,GAAG,OAAIA,EAAIM,iBAGlD,CAACqC,IAEJ7C,qBAAU,WACNH,EAAQY,KAAKC,MAAsB,IAAhBD,KAAKE,aACzB,CAACkC,IAgBA,sBAAK7B,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,UACA,cAACE,EAAA,EAAD,CAAQC,IAAG,iDAA4CvB,EAA5C,UACX,sBAAKoB,UAAU,mBAAf,UACI,6BAAKH,IACL,2CACW,GACV,IAAImC,KAAJ,UAASlD,EAASA,EAASmD,OAAS,UAApC,iBAAS,EAA+BC,iBAAxC,aAAS,EAA0CC,UAAUC,oBAKlE,sBAAKpC,UAAU,oBAAf,UACI,cAACsB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,MAEJ,cAACD,EAAA,EAAD,UACI,cAACe,EAAA,EAAD,MAEJ,cAACf,EAAA,EAAD,UACI,cAAC,IAAD,YAKR,qBAAKtB,UAAU,aAAf,SACKlB,EAASS,KAAI,SAACa,GAAD,aACV,oBAAGJ,UAAS,wBAAmBI,EAAQ3B,OAAS0C,EAAKmB,aAAe,kBAApE,UACJ,sBAAMtC,UAAU,aAAhB,SAA8BI,EAAQ3B,OACrC2B,EAAQA,QACT,sBAAMJ,UAAU,kBAAhB,SACK,IAAIgC,KAAJ,UAAS5B,EAAQ8B,iBAAjB,aAAS,EAAmBC,UAAUC,wBAQ/C,sBAAKpC,UAAU,eAAf,UACI,cAAC,IAAD,IACA,iCACI,uBACAY,MAAOe,EACPY,SAAU,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAO7B,QACnCY,YAAY,iBACZkB,KAAK,SACL,wBAAQ9C,QA7DJ,SAAC4C,GACjBA,EAAEG,iBACFC,QAAQC,IAAI,gBAAiBlB,GAE7BlE,EAAGwB,WAAW,SAASC,IAAI2C,GAAQ5C,WAAW,YAAYc,IAAI,CAC1DK,QAASuB,EACTlD,KAAM0C,EAAKmB,YACXJ,UAAWxE,IAASS,UAAU2E,WAAWC,oBAG7CnB,EAAS,KAmDiCc,KAAK,SAAnC,+BAEJ,cAAC,IAAD,W,iCCnGHM,EACC,WAiBCxC,EAdC,SAACyC,EAAOC,GAEpB,OADAN,QAAQC,IAAIK,GACJA,EAAOR,MACX,KAAKM,EACD,OAAO,2BACAC,GADP,IAEI9B,KAAM+B,EAAO/B,OAGjB,QACI,OAAO8B,ICoBRE,MA/Bf,WAAkB,IAAD,EACUrC,IADV,yCACFsC,EADE,KAab,OACI,qBAAKpD,UAAU,QAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKG,IAAI,+EACTkD,IAAI,kBAER,qBAAKrD,UAAU,cAAf,SACI,uDAGJ,cAACsD,EAAA,EAAD,CAAQZ,KAAK,SAAS9C,QArBf,WACXxB,EACKmF,gBAAgBlF,GAChBmF,MAAK,SAACC,GACHL,EAAU,CACNV,KAAMM,EACN7B,KAAMsC,EAAOtC,UAGpBuC,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAMvD,aAY9B,uCCUGyD,MAhCf,WAAgB,IAAD,EACa/C,IADb,mBACLK,EADK,KACLA,KAGR,OAJa,KAMX,aADA,CACA,OAAKnB,UAAU,MAAf,SACMmB,EAGA,qBAAKnB,UAAU,YAAf,SACJ,eAAC,IAAD,WAEI,cAAC,EAAD,IAEA,eAAC,IAAD,WACA,cAAC,IAAD,CAAO8D,KAAK,iBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cAZF,cAAC,EAAD,OCJKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAehE,aJVQ,CACvBU,KAAM,MISqCX,QAASA,EAApD,SACE,cAAC,EAAD,QAGJkE,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92c8b553.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDrx3ussDFzUveaWwar5nhEK9THZP2DQfg\",\n  authDomain: \"whatsapp-eb671.firebaseapp.com\",\n  projectId: \"whatsapp-eb671\",\n  storageBucket: \"whatsapp-eb671.appspot.com\",\n  messagingSenderId: \"600986782764\",\n  appId: \"1:600986782764:web:aef4cdb6648ffa0fb0d589\",\n  measurementId: \"G-W5EBRDEV7T\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider }\nexport default db;","import React, { useEffect, useState } from \"react\";\nimport './SidebarChat.css';\nimport { Avatar } from \"@material-ui/core\";\nimport db from \"./firebase\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction SidebarChat({ id, name, addNewChat }) {\n    const [seed, setSeed] = useState(\"\");\n    const [messages, setMessages ] = useState(\"\");\n\n    useEffect(() => {\n        if (id) {\n            db.collection('rooms').doc(id).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => (\n                setMessages(snapshot.docs.map((doc) =>\n                doc.data()))\n            ))\n        }\n    }, [id]);\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [])\n\n    const createChat = () => {\n        const roomName = prompt(\"Please enter name for chat\");\n\n        if (roomName) {\n            db.collection(\"rooms\").add({\n                name: roomName,\n            });\n        }\n    }\n    \n\n    return !addNewChat ? (\n        <Link to={`/rooms/${id}`}>\n            <div className=\"sidebarChat\">\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n                <div className=\"sidebarChat__info\">\n                    <h2>{name}</h2>\n                    <p>{messages[0]?.message}</p>\n                </div>\n            </div>\n        </Link>\n        \n    ) : (\n        <div onClick={createChat} className=\"sidebarChat\">\n            <h2>Add New Chat</h2>\n        </div>\n    )\n}\n\nexport default SidebarChat\n","import React, { createContext, useContext, useReducer } from \"react\"\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import React, { useState, useEffect } from \"react\";\nimport SidebarChat from \"./SidebarChat\"\n\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport db from \"./firebase\";\n\nimport \"./Sidebar.css\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Sidebar() {\n    const [rooms, setRooms] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n    useEffect(() => {\n        const unsubscribe = db.collection(\"rooms\")\n        .onSnapshot((snapshot) => \n            setRooms(\n                snapshot.docs.map((doc) => ({\n                   id:doc.id,\n                   data: doc.data(),\n               }))\n            )\n        )\n               return () => {\n                   unsubscribe();\n               }\n\n    }, [])\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar src={user?.photoURL} />\n        <div className=\"sidebar__headerRight\">\n          <IconButton>\n            <DonutLargeIcon />\n          </IconButton>\n          <IconButton>\n            <ChatIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"sidebar__search\">\n        <div className=\"sidebar__searchContainer\">\n          <SearchOutlined />\n          <input placeholder=\"Search or start new chat\" />\n        </div>\n      </div>\n      <div className=\"sidebar__chats\">\n          <SidebarChat addNewChat />\n          {rooms.map(room => (\n              <SidebarChat key={room.id} id={room.id} \n                name={room.data.name}\n              />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React, { useState, useEffect } from 'react'\nimport \"./Chat.css\"\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport MicIcon from \"@material-ui/icons/Mic\"\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport { useParams } from \"react-router-dom\" \nimport db from \"./firebase\";\nimport { useStateValue } from './StateProvider';\nimport firebase from \"firebase\";\n\nfunction Chat() {\n    const [input, setInput] = useState(\"\");\n    const [seed, setSeed] = useState(\"\");\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{ user }, dispatch] = useStateValue();\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection(\"rooms\")\n            .doc(roomId)\n            .onSnapshot((snapshot) => \n                setRoomName(snapshot.data().name));\n\n            db.collection(\"rooms\")\n            .doc(roomId)\n            .collection(\"messages\")\n            .orderBy('timestamp','asc')\n            .onSnapshot((snapshot) => \n                setMessages(snapshot.docs.map(doc => doc.data()))\n            )  ;  \n        }\n    }, [roomId])\n\n    useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));\n    }, [roomId])\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n        console.log('You typed >>>', input);\n\n        db.collection('rooms').doc(roomId).collection('messages').add({\n            message: input,\n            name: user.displayName,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n        })\n\n        setInput(\"\");\n    }\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\n            <div className=\"chat__headerInfo\">\n                <h3>{roomName}</h3>\n                <p>\n                last seen {\"\"}\n                {new Date(messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}\n\n                </p>\n            </div>\n\n            <div className=\"chat__headerRight\">\n                <IconButton>\n                    <SearchOutlined />\n                </IconButton>\n                <IconButton>\n                    <AttachFile />\n                </IconButton>\n                <IconButton>\n                    <MoreVert />\n                </IconButton>\n            </div>\n            </div>\n\n            <div className=\"chat__body\">\n                {messages.map((message) => (\n                    <p className={`chat__message ${message.name === user.displayName && 'chat__reciever'}`}>\n                <span className=\"chat__name\">{message.name}</span>\n                {message.message}\n                <span className=\"chat__timestamp\">\n                    {new Date(message.timestamp?.toDate()).toUTCString()}\n                </span>\n                </p>\n                ))}\n                \n                \n            </div>\n\n            <div className=\"chat__footer\">\n                <InsertEmoticonIcon />\n                <form>\n                    <input \n                    value={input} \n                    onChange={(e) => setInput(e.target.value)} \n                    placeholder=\"Type a message\" \n                    type=\"text\" />\n                    <button onClick={sendMessage} type=\"submit\">Send a message</button>\n                </form>\n                <MicIcon />\n\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n","export const initialState= { \n    user: null,\n};\n\nexport const actionTypes = {\n    SET_USER: \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user,\n            };\n\n            default: \n                return state;\n    }\n};\n\nexport default reducer","import React from 'react';\nimport \"./Login.css\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"./firebase\"\nimport { actionTypes } from './reducer';\nimport { useStateValue } from './StateProvider'\n\nfunction Login() {\n    const [{}, dispatch] = useStateValue();\n    const signIn = () => {\n        auth\n            .signInWithPopup(provider)\n            .then((result) => {\n                dispatch ({\n                    type: actionTypes.SET_USER,\n                    user: result.user,\n                })\n            })\n            .catch((error) => alert(error.message));\n    };\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://i.pinimg.com/originals/79/dc/31/79dc31280371b8ffbe56ec656418e122.png\"\n                alt=\"Whatsapp Logo\" />\n            \n            <div className=\"login__text\">\n                <h1>Sign in to Whatsapp</h1>\n            </div>\n\n            <Button type=\"submit\" onClick={signIn}>\n                Sign In With Google\n            </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import './App.css';\nimport React, { useState } from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Chat from \"./Chat\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{user}, setUser] = useStateValue();\n  \n  \n  return (\n    // BEM naming conventions\n    <div className=\"app\">\n        {!user ? (\n          <Login />\n        ) : (\n          <div className=\"app__body\">\n      <Router>\n        \n          <Sidebar />\n\n          <Switch>\n          <Route path=\"/rooms/:roomId\">\n            <Chat />\n          </Route> \n          <Route path=\"/\">\n            <Chat />\n          </Route>\n        </Switch>\n      </Router>\n        \n      </div>\n    \n        )}\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from \"./StateProvider\"\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}